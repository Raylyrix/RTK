name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: rtx_innovations_electron
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build renderer
        run: npm run build

      - name: Generate icons
        run: npm run gen-icons

      - name: Build and publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx electron-builder --publish always

name: Build and Release

on:
  push:
    tags:
      - 'v*'
      - 'V*'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: rtx_innovations_electron
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Build renderer
        run: npm run build

      - name: Generate icons
        run: npm run gen-icons

      - name: Package (Windows)
        run: npx electron-builder --win nsis

      - name: List build files
        run: ls -la dist-builds/

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: dist-builds/
          retention-days: 30

  build-macos:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: rtx_innovations_electron
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Build renderer
        run: npm run build

      - name: Generate icons
        run: npm run gen-icons

      - name: Package (macOS)
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
        run: npx electron-builder --mac pkg

      - name: List build files
        run: ls -la dist-builds/

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: dist-builds/
          retention-days: 30

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-installer
          path: ./windows

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-installer
          path: ./macos

      - name: List downloaded artifacts
        run: |
          echo "Windows artifacts:"
          ls -la ./windows/
          echo "macOS artifacts:"
          ls -la ./macos/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./windows/dist-builds/*.exe
            ./macos/dist-builds/*.pkg
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


