name: Release Builds

on:
  push:
    tags:
      - 'v*'
      - 'V*'

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: rtx_innovations_electron
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Sync package.json version from tag
        run: |
          TAG="${GITHUB_REF_NAME}"
          VER="${TAG#v}"
          VER="${VER#V}"
          echo "Setting version to $VER from tag $TAG"
          node -e "const fs=require('fs'); const p=require('./package.json'); p.version='${VER}'; fs.writeFileSync('package.json', JSON.stringify(p, null, 2));"

      - name: Build renderer
        run: npm run build

      - name: Generate icons
        run: npm run gen-icons

      - name: Package and publish (GitHub Release)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --win --publish always

name: build-and-release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-and-publish-windows:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: rtx_innovations_electron
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install --no-audit --no-fund
      - run: npm run gen-icons
      - name: Build and publish (Windows)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --win --publish always

  build-and-publish-macos:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: rtx_innovations_electron
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install --no-audit --no-fund
      - run: npm run gen-icons
      - name: Build and publish (macOS)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
        run: npx electron-builder --mac pkg --publish always 